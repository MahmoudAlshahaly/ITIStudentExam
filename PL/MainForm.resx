<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        KQZzSMqCD/A//9k=
</value>
  </data>
</root>